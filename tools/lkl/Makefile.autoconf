POSIX_HOSTS=elf64-x86-64 elf32-i386 elf64-x86-64-freebsd

define set_autoconf_var
  $(shell echo "#define LKL_HOST_CONFIG_$(1) $(2)" \
	  >> $(OUTPUT)/include/lkl_autoconf.h)
  $(shell echo "LKL_HOST_CONFIG_$(1)=$(2)" >> $(OUTPUT)/tests/autoconf.sh)
  export LKL_HOST_CONFIG_$(1)=$(2)
endef

define find_include
  $(eval include_paths=$(shell $(CC) -E -Wp,-v -xc /dev/null 2>&1 | grep '^ '))
  $(foreach f, $(include_paths), $(wildcard $(f)/$(1)))
endef

define is_defined
$(shell $(CC) -dM -E - </dev/null | grep $(1))
endef

define bsd_host
  $(call set_autoconf_var,BSD,y)
endef

define arm_host
  $(call set_autoconf_var,ARM,y)
endef

define aarch64_host
  $(call set_autoconf_var,AARCH64,y)
endef

define posix_host
  $(call set_autoconf_var,POSIX,y)
  LDFLAGS += -pie
  CFLAGS += -fPIC -pthread
  SOSUF := .so
  LDLIBS += -lrt -lpthread
  $(if $(filter $(1),elf64-x86-64-freebsd),$(call bsd_host))
  $(if $(filter $(1),elf32-littlearm),$(call arm_host))
  $(if $(filter $(1),elf64-littleaarch64),$(call aarch64_host))
  $(if $(strip $(call find_include,fuse.h)),$(call set_autoconf_var,FUSE,y))
  $(if $(strip $(call find_include,archive.h)),$(call set_autoconf_var,ARCHIVE,y))
  $(if $(filter $(1),elf64-x86-64-freebsd),$(call set_autoconf_var,NEEDS_LARGP,y))
  $(if $(filter $(1),elf32-i386),$(call set_autoconf_var,I386,y))
endef

define do_autoconf
  export CROSS_COMPILE := $(CROSS_COMPILE)
  export CC := $(CROSS_COMPILE)gcc
  export LD := $(CROSS_COMPILE)ld
  export AR := $(CROSS_COMPILE)ar
  $(eval LD := $(CROSS_COMPILE)ld)
  $(eval CC := $(CROSS_COMPILE)gcc)
  $(eval LD_FMT := $(shell $(LD) -r -print-output-format))
  $(if $(filter $(LD_FMT),$(POSIX_HOSTS)),$(call posix_host,$(LD_FMT)))
endef

export do_autoconf


$(OUTPUT)Makefile.conf: Makefile.autoconf
	$(shell mkdir -p $(OUTPUT)/include)
	$(shell mkdir -p $(OUTPUT)/tests)
	$(shell echo -n "" > $(OUTPUT)/include/lkl_autoconf.h)
	$(shell echo -n "" > $(OUTPUT)/tests/autoconf.sh)
	@echo "$$do_autoconf" > $(OUTPUT)/Makefile.conf
